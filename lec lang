class LinkedList:
    def __init__(self):
        self.head = None

    # Method to traverse and print the linked list 
    def display(self):
        current_node = self.head
        while current_node is not None:
            print(current_node.data)
            current_node = current_node.next

    # Method to insert a new node at the start 
    def insert_at_head(self, new_data):
        new_node = Node(new_data) 
        new_node.next = self.head
        self.head = new_node

    # Method to append a new node at the end 
    def insert_at_end(self, new_data): 
        new_node = Node(new_data) 
        if self.head is None:
            self.head = new_node 
            return
        last_node = self.head
        while last_node.next:
            last_node = last_node.next
        last_node.next = new_node

    # Method to insert a node at a specific position 
    def insert_at_position(self, new_element, position):
        new_node = Node(new_element)
        if position < 1:
            print("\nPosition must be >= 1")
            return
        elif position == 1:
            new_node.next = self.head 
            self.head = new_node
        else:
            current = self.head
            for _ in range(1, position - 1):
                if current is not None:
                    current = current.next
            if current is not None:
                new_node.next = current.next 
                current.next = new_node
            else:
                print("The list is empty")
